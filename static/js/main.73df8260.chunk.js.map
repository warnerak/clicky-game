{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Title","score","highscore","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","alert","concat","find","o","i","sort","Math","random","_this2","components_Wrapper","components_Title","map","ImageCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oyEAWeA,SARF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MACxDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCD9BC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCS1CC,SATD,SAAAd,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACYJ,EAAMe,MADlB,eACqCf,EAAMgB,qBCgEpCC,oNA9DbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,KAGbI,SAAW,WAaT,OAXIC,EAAKH,MAAMH,MAAQM,EAAKH,MAAMF,WAChCK,EAAKC,SAAS,CAAEN,UAAWK,EAAKH,MAAMH,OAAS,WAC7CQ,QAAQC,IAAIC,KAAKP,MAAMF,aAI3BK,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEfC,MAAK,yBAAAC,OAA0BT,EAAKH,MAAMH,QAC1CM,EAAKC,SAAS,CAAEP,MAAO,KAChB,KAGTT,WAAa,SAAAC,GAIXc,EAAKH,MAAMC,MAAMY,KAAK,SAACC,EAAGC,GACxB,OAAID,EAAEzB,KAAOA,IACY,IAAnBY,EAAMc,GAAGL,OACXT,EAAMc,GAAGL,MAAQT,EAAMc,GAAGL,MAAQ,EAClCP,EAAKC,SAAS,CAAEP,MAAOM,EAAKH,MAAMH,MAAQ,GAAK,WAC7CQ,QAAQC,IAAIC,KAAKP,MAAMH,SAEzBM,EAAKH,MAAMC,MAAMe,KAAK,kBAAMC,KAAKC,SAAW,MACrC,IAEPf,EAAKD,YACE,+EAQN,IAAAiB,EAAAZ,KACP,OACExB,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAD,CAAOxB,MAAOU,KAAKP,MAAMH,MAAOC,UAAWS,KAAKP,MAAMF,WAAtD,eACCS,KAAKP,MAAMC,MAAMqB,IAAI,SAAAb,GAAI,OACxB1B,EAAAC,EAAAC,cAACsC,EAAD,CACEnC,WAAY+B,EAAK/B,WACjBC,GAAIoB,EAAKpB,GACTmC,IAAKf,EAAKpB,GACVI,MAAOgB,EAAKhB,kBAxDNgC,oBCFlBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.73df8260.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Card = props => (\r\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n        <div className=\"img-container\">\r\n            <img alt={props.name} src={props.image} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Title = props => (\r\n    <div className=\"header\">\r\n        <div className=\"title\">{props.children}</div>\r\n        <div className=\"scores\">\r\n            Score: {props.score} Highscore: {props.highscore}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Title;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    // Changes the highscore to the current score, if said score is larger than the higherscore\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function () {\n        console.log(this.state.highscore);\n      });\n    }\n    // Reset all card counts and score to zero and run the alert that you lost the game\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  clickCount = id => {\n    //loops through the cards to check to see if the card has been clicked\n    //if card count is clicked then it sets the count to 1 and shuffle the cars\n    //if clicked again then it will run the game over function\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n          return false\n        }\n      }\n      return false\n    });\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} highscore={this.state.highscore}>Clicky Game</Title>\n        {this.state.cards.map(card => (\n          <ImageCard\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}